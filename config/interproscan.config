params {
    skipApplications = "prosite-patterns,smart,sfld"
    goterms = true
    pathways = true
    formats = "TSV"
}

profiles {
    kebnekaise {   
        process {
            executor = "slurm"
            clusterOptions = "-A ${params.project} -C zen3|zen4|skylake -p batch"
        }
    }

    dardel {
        // Nextflow config for use with Dardel
        // Modified from https://github.com/nf-core/configs/blob/master/conf/pdc_kth.config
        params {
            clusterName                = "dardel"
            max_memory                 = 1790.GB
            max_cpus                   = 256
            max_time                   = 7.d
        }
        process {
            resourceLimits = [
                memory: 1790.GB,
                cpus: 256,
                time: 7.d,
            ]
            beforeScript   = 'module load PDC apptainer'
            executor       = "slurm"
            clusterOptions = {
                def clusterOptionsCreator = { mem, time, cpus ->
                    def slurm_opts = [
                        "-A ${params.project}",
                        params.clusterOptions ?: "",
                    ]
                    if (time <= 7.d && mem <= 111.GB && cpus <= 256) {
                        slurm_opts << "-p shared"
                    }
                    else {
                        def partition = time < 1.d
                            ? (mem > 222.GB ? 'memory,main' : 'main')
                            : (mem > 222.GB ? 'memory' : 'long')
                        slurm_opts << "-p ${partition}"
                    }
                    if (!mem || mem < 6.GB) {
                        // Impose minimum memory if request is below
                        slurm_opts << '--mem=6G'
                    }
                    slurm_opts.minus("").join(" ")
                }
                clusterOptionsCreator(task.memory, task.time, task.cpus)
            }
        }
    }
}