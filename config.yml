##############################
## DATA PATHS & SAMPLE INFO ##
##############################
# Set work directory
workdir: "."
# Sample information file
# The file should be a tab-separated file with the following columns:
# Sample accession assembly
sample_file_list: "sample_list.tsv"
# Path to raw sequence files
# each sample listed in the sample_file_list should have corresponding
# R1 and R2 files under datadir
datadir: "data/raw"
# Set read length of samples
# This is used by STAR when generating the genome index
# If samples have different read lengths, set this to the maximum read length
# among the samples
read_length: 150

###################
## PREPROCESSING ##
###################
# Preprocessing is done with fastp

# fastp_adapter_sequence and fastp_adapter_sequence_r2 set the adapter sequences to trim
# the default values are for Illumina TruSeq adapters
fastp_adapter_sequence: "AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"
fastp_adapter_sequence_r2: "AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"
# fastp_length_required sets the minimum read length required after trimming
fastp_length_required: 50

###############
## FILTERING ##
###############
# How should reads be filtered?

## HOST FILTERING ##
# Host filtering is done by mapping reads against a host genome with STAR
host_filter: False
# host_fna is a fasta file of the host genome
host_fna: ""
# host_gff if a GFF3 format file of the host genome
host_gff: ""
# star_limitGenomeGenerateRAM sets the maximum allowed RAM usage (in GB)
# when generating the genome index
star_limitGenomeGenerateRAM: 128
# star_extra_build_params sets the extra parameters for star index build
star_extra_build_params: "--genomeChrBinNbits 15 --genomeSAsparseD 3 --genomeSAindexNbases 14 --sjdbGTFtagExonParentTranscript Parent"
# star_extra_params sets the extra parameters for star alignment
# if STAR aligner fails to map reads to host, consider lowering the values below
# in order to increase sensitivity of the aligner. WARNING: Note that this may
# increase the number of false positive host reads meaning that fungal reads
# may end up in the 'host' bin
star_extra_params: "--outFilterScoreMinOverLread 0.66 --outFilterMatchNminOverLread 0.66 --seedSearchStartLmax 50"

## FUNGI FILTERING ##
# Fungal filtering is done by mapping reads against transcriptomes of fungal
# genomes downloaded from JGI Mycocosm.
fungi_filter: False
# The paired strategy sets how to handle read-pair mapping during filtering
# if 'both_mapped', then both reads in a pair have to map to fungal transcriptomes
# and neither read can map to the host genome
# if 'one_mapped', then only one read in a pair has to map to fungal transcriptomes
# and pairs where at least one read maps to the host genome will be discarded
paired_strategy: "one_mapped"
# HTML file listing JGI genomes for which to download transcript files
# Get this file from https://mycocosm.jgi.doe.gov/fungi/fungi.info.html
fungi_info: "Fungi.html"
# Path to file listing JGI genomes for which to download transcript files
# if this file does not exist it will be generated from the URL above
fungi_genomes_file: "resources/JGI/genomes.tsv"
# In order to download from JGI, you need to provide your JGI username and password
# in a file that you point to with 'jgi_account_info'
# this file should contain
# jgi_user: your_jgi_username
# jgi_password: your_jgi_password
# If you do not have a JGI account, you can create one at https://contacts.jgi.doe.gov/registration/new
jgi_account_info: "config/jgi_account_info.yml"
# Strobealign parameters
strobealign_strobe_len: 17
# Use kraken2 to add fungal reads and remove prokaryutic reads?

## KRAKEN FILTERING ##
# Kraken2 filtering is done by classifying reads with Kraken2 using a database
# of choice, then retaining reads classified as fungal.
kraken_filter: False

# kraken_db sets the folder name of the kraken2 database (must contain hash.k2d
# opts.k2d and taxo.k2d files)
kraken_db: "20240229-015730_nt"
# kraken_db_dir sets the base directory of kraken data. the folder name
# specified with kraken_db must exist within this directory
kraken_db_dir: "/sw/data/Kraken2_data"
kraken_confidence: 0.2

##############
## ASSEMBLY ##
##############

# should a co-assembly be generated? If True, assemblies will be generated based
# on the assembly column in the sample_file_list
co_assembly: True
# should single-sample assemblies be generated?
single_assembly: False
# Choose what assembler to use. Allowed values are 'megahit', 'trinity' or
# 'transabyss'
assembler: trinity
# for transabyss, set the kmer values to use for iterative assembly
transabyss_kmers: [21, 25, 29, 31, 65, 75, 85, 95]
# set the minimum contig length 
min_contig_len: 200
# set the target max coverage for insilico normalization this is used to
# normalize the reads for co-assemblies
insilico_norm_max_cov: 30
# set the maximum memory (in GB) to use for insilico normalization (in GB)
insilico_norm_mem: 100

#################################
## READ MAPPING/QUANTIFICATION ##
#################################
# Quantification is done by mapping reads against assembled transcripts. The
# workflow runs RSEM (alignment based) and Kallisto (pseudo-aligner). BAM files
# produced by RSEM is also used with featureCounts to assign reads directly to
# predicted ORFs.

## featureCounts
# fc_params sets the read assignment parameters used by featureCounts.
# The default is to:
# - run in paired end mode (-p)
# - count fragments (--countReadPairs)
# - assign reads to exon features (-t exon)
# - group by Parent attributes (-g Parent)
# - require a minimum mapping quality of 10 (-Q 10), and
# - set strandedness to 0 (-s 0) (standard Illumina)
# For IlluminaTruSeq Stranded libraries, use '-s 2'
fc_params: "-p --countReadPairs -t exon -g Parent -Q 10 -s 0 "
## kallisto
# The kallisto_params can be used to pass any argument to kallisto. The default is to simply run with 100 bootstraps (-b 100). 
# If using IlluminaTruSeq Stranded libraries, also add '--rf-stranded' to this parameter.
kallisto_params: "-b 100"

################
## ANNOTATION ##
################
# Annotation includes gene calling with TransDecoder, taxonomic assignment with
# MMSeqs2 and functional assignments with eggNOG-mapper and Interproscan.

## MMseqs2 paths
# mmseqs_db_dir is the path to where MMSeqs2 databases are stored
# this path must contain databases used in the transdecoder_homology_db
# and mmseqs_db parameters
mmseqs_db_dir: "/sw/data/MMseqs2_data/latest/rackham"
# what database to use for the homology filtering step by TransDecoder
# this database is both used to filter predicted genes called and for
# a first round of taxonomic assignment/filtering of transcripts
transdecoder_homology_db: "UniRef90"
# mmseqs_db is the database to use for the actual taxonomic assignment
mmseqs_db: "NR"
# extra_genomes is a file listing additional genomes to include in the
# taxonomic assignment step. The file should be tab-separated with
# the following two first columns: 'portal' and 'taxid' where portal
# is the shorthand JGI name of the genome portal and taxid is the NCBI
# taxonomic ID of the genome
extra_genomes: "extra_JGI_genomes.tsv"
# emapper_db_dir is the path to where the eggNOG database is stored
# this path must contain the 'eggnog.db', 'eggnog_proteins.dmnd', 'eggnog.taxa.db' files
# and 'mmseqs/' directory
emapper_db_dir: "/sw/data/eggNOG_data/5.0.0/rackham"
# interproscan_url is the URL path where the pipeline will fetch interproscan data
interproscan_url: "http://ftp.ebi.ac.uk/pub/software/unix/iprscan/5/5.75-106.0/alt/interproscan-data-5.75-106.0.tar.gz"
# interproscan_profiles is a list of profiles to use for running the external interproscan nextflow pipeline
# set kebnekaise or dardel if running on one of these clusters and also apptainer to handle software dependencies.
interproscan_profiles:
  - "dardel"
  - "apptainer"
# The tax_rank and tax_name parameters set what taxonomic level to extract
# eggNOG annotations for (put in a separate folder)
tax_rank: kingdom
tax_name: Fungi

#######################
## READ PARTITIONING ##
#######################
# Reads classified by Kraken2 can be partitioned into bins using the taxmap parameter below.
taxmap:
  Prokaryota: [2, 2157]
  Fungi: [4751]
  Eukaryota: [2759]

# Download parameters for fastq-dump (leave empty unless testing)
dlparams: ""